quarkus.package.type=uber-jar
quarkus.log.level=DEBUG
quarkus.http.access-log.enabled=true
quarkus.http.access-log.pattern=%h %l %u %t "%r" %s %b - combined: %h %l %u %t "%r" %s %b "%{i,Referer}" "%{i,User-Agent}" - long: %r %{ALL_REQUEST_HEADERS}

developer.greeting.message=Hello All!
extra.message=Something extra?
secret.password=password

quarkus.container-image.build=true
quarkus.container-image.group=com.demo.api.developers
quarkus.container-image.registry=
quarkus.container-image.tag=1.0
#quarkus.container-image.username=true
#quarkus.container-image.password=true
#quarkus.container-image.push=true

#quarkus.smallrye-health.root-path=/hello
#quarkus.smallrye-health.liveness-path=/customlive
#quarkus.smallrye-health.readiness-path=/customready

#Kubernetes resources
#quarkus.kubernetes.replicas=1
#quarkus.kubernetes.readiness-probe.initial-delay-seconds=10
#quarkus.kubernetes.readiness-probe.period-seconds=30

quarkus.kubernetes-client.namespace=developers-api
quarkus.kubernetes.labels.app=developers-api
quarkus.kubernetes.labels.version=1.0

quarkus.kubernetes.service-type=NodePort
quarkus.kubernetes.env-vars.KUBERNETES_NAMESPACE.value=developers-api

#This will be available in latest release of Quarkus happening on 24th November
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=100m
quarkus.kubernetes.resources.limits.memory=256Mi
quarkus.kubernetes.resources.limits.cpu=100m

# Refer a particular property from Kubernetes ConfigMap and load it as environment variable
#quarkus.kubernetes.env-vars.developer-greeting-message.value=developer.greeting.message
#quarkus.kubernetes.env-vars.developer-greeting-message.configmap=developers-api-config

# Refer and load Kubernetes ConfigMaps as property sources
#quarkus.kubernetes-config.enabled=true
#quarkus.kubernetes-config.config-maps=my-extra-config

# Refer secret password
#quarkus.kubernetes.env-vars.secret-password.name=secret.password
#quarkus.kubernetes.env-vars.secret-password.secret=developers-api-secret-config

# Refer secret password from volume
#quarkus.kubernetes.mounts.mounted-secret-config.path=/mounted/secret/config
#quarkus.kubernetes.mounts.mounted-secret-config.read-only=true
#quarkus.kubernetes.secret-volumes.mounted-secret-config.secret-name=developers-api-secret-config
#quarkus.kubernetes.secret-volumes.mounted-secret-config.default-mode=420

# Accessing vault
quarkus.vault.health.enabled=true
quarkus.vault.url=http://192.168.99.103:31802
#http://vault.vault.svc.cluster.local:8200
quarkus.vault.authentication.userpass.username=jelly
quarkus.vault.authentication.userpass.password=jelly

quarkus.vault.kv-secret-engine-version=2
quarkus.vault.secret-config-kv-path=developers-api/vault-service/config

#Hazelcast integration
quarkus.hazelcast-client.cluster-members=hazelcast.hazelcast:5701
#quarkus.hazelcast-client.outbound-port-definitions
#quarkus.hazelcast-client.outbound-ports
#quarkus.hazelcast-client.cluster-name
#quarkus.hazelcast-client.labels
#quarkus.hazelcast-client.connection-timeout

#Jaeger Configuration
quarkus.jaeger.service-name=developers-api
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://jaeger-collector.tracing.svc.cluster.local:14268/api/traces
